AC_INIT(esniper.c)
AM_INIT_AUTOMAKE(esniper,2.9.0-alpha)
AC_PROG_CC
AC_PROG_MAKE_SET

AC_ARG_WITH(curl-config, [  --with-curl-config=PATH Location of libcurl curl-config []], curl_config="$withval", curl_config="curl-config")


AC_MSG_CHECKING(for $curl_config)
if test -f $curl_config ; then
  CURL_CONFIG=$curl_config
  AC_MSG_RESULT(yes)
else				dnl check in path
  AC_CHECK_PROGS(CURL_CONFIG, curl-config)
fi

if test "X$CURL_CONFIG" = "X"; then
  AC_MSG_ERROR($curl_config not found.
cURL is available from http://curl.haxx.se/)
fi

dnl check version curl_easy_strerror was added in 7.11.2
dnl check version all other curl_easy were added in 7.1.1
curl_ver=`$CURL_CONFIG --version | sed -e "s/libcurl //g"`
curl_ver_mj=`echo $curl_ver|cut -d . -f 1`
curl_ver_mn=`echo $curl_ver|cut -d . -f 2`
curl_ver_mn2=`echo $curl_ver|cut -d . -f 3`

AC_MSG_CHECKING(for cURL version)
AC_MSG_RESULT($curl_ver)
if test $curl_ver_mj -gt 7 -o \( $curl_ver_mj -eq 7 -a \( $curl_ver_mn -gt 11 -o \( $curl_ver_mn -eq 11 -a $curl_ver_mn2 -ge 2 \) \) \);then
  true
elif test $curl_ver_mj -gt 7 -o \( $curl_ver_mj -eq 7 -a \( $curl_ver_mn -gt 1 -o \( $curl_ver_mn -eq 1 -a $curl_ver_mn2 -ge 1 \) \) \);then
  CURL_ADDITIONAL="-D NEED_CURL_EASY_STRERROR"
else
  AC_MSG_ERROR(cURL 7.1.1 or newer required
cURL is available from http://curl.haxx.se/)
fi

dnl check for curl SSL support
AC_MSG_CHECKING(for cURL SSL support)
if test XSSL != X`$CURL_CONFIG --feature|grep SSL`; then
  AC_MSG_ERROR([no SSL
cURL is available from http://curl.haxx.se/])
else
  AC_MSG_RESULT(yes)
fi

CURLCFLAGS="`$CURL_CONFIG --cflags` $CURL_ADDITIONAL"
CURLLDFLAGS=`$CURL_CONFIG --libs`

AC_SUBST(CURLCFLAGS)
AC_SUBST(CURLLDFLAGS)

AC_OUTPUT(Makefile)
